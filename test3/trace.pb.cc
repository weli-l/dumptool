// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: trace.proto
// Protobuf C++ Version: 5.28.1

#include "trace.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr StackFrame::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        category_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        parent_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR StackFrame::StackFrame(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct StackFrameDefaultTypeInternal {
  PROTOBUF_CONSTEXPR StackFrameDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~StackFrameDefaultTypeInternal() {}
  union {
    StackFrame _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 StackFrameDefaultTypeInternal _StackFrame_default_instance_;

inline constexpr Arguments::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : futex_top_{},
        thread_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        event_type_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        count_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR Arguments::Arguments(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ArgumentsDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ArgumentsDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ArgumentsDefaultTypeInternal() {}
  union {
    Arguments _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ArgumentsDefaultTypeInternal _Arguments_default_instance_;
              template <typename>
PROTOBUF_CONSTEXPR TraceData_StackFramesEntry_DoNotUse::TraceData_StackFramesEntry_DoNotUse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : TraceData_StackFramesEntry_DoNotUse::MapEntry(_class_data_.base()){}
#else   // PROTOBUF_CUSTOM_VTABLE
    : TraceData_StackFramesEntry_DoNotUse::MapEntry() {
}
#endif  // PROTOBUF_CUSTOM_VTABLE
struct TraceData_StackFramesEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceData_StackFramesEntry_DoNotUseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceData_StackFramesEntry_DoNotUseDefaultTypeInternal() {}
  union {
    TraceData_StackFramesEntry_DoNotUse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceData_StackFramesEntry_DoNotUseDefaultTypeInternal _TraceData_StackFramesEntry_DoNotUse_default_instance_;

inline constexpr Event::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        stack_frames_{},
        name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        cat_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        track_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        args_{nullptr},
        pid_{0u},
        tid_{0u},
        ts_{::uint64_t{0u}},
        dur_{::uint64_t{0u}} {}

template <typename>
PROTOBUF_CONSTEXPR Event::Event(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EventDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EventDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EventDefaultTypeInternal() {}
  union {
    Event _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EventDefaultTypeInternal _Event_default_instance_;

inline constexpr TraceData::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : trace_events_{},
        stack_frames_{},
        samples_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR TraceData::TraceData(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct TraceDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR TraceDataDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~TraceDataDefaultTypeInternal() {}
  union {
    TraceData _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 TraceDataDefaultTypeInternal _TraceData_default_instance_;
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_trace_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_trace_2eproto = nullptr;
const ::uint32_t
    TableStruct_trace_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::StackFrame, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::StackFrame, _impl_.id_),
        PROTOBUF_FIELD_OFFSET(::StackFrame, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::StackFrame, _impl_.category_),
        PROTOBUF_FIELD_OFFSET(::StackFrame, _impl_.parent_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::Arguments, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Arguments, _impl_.count_),
        PROTOBUF_FIELD_OFFSET(::Arguments, _impl_.thread_name_),
        PROTOBUF_FIELD_OFFSET(::Arguments, _impl_.futex_top_),
        PROTOBUF_FIELD_OFFSET(::Arguments, _impl_.event_type_),
        PROTOBUF_FIELD_OFFSET(::Event, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::Event, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::Event, _impl_.name_),
        PROTOBUF_FIELD_OFFSET(::Event, _impl_.cat_),
        PROTOBUF_FIELD_OFFSET(::Event, _impl_.pid_),
        PROTOBUF_FIELD_OFFSET(::Event, _impl_.tid_),
        PROTOBUF_FIELD_OFFSET(::Event, _impl_.ts_),
        PROTOBUF_FIELD_OFFSET(::Event, _impl_.dur_),
        PROTOBUF_FIELD_OFFSET(::Event, _impl_.track_),
        PROTOBUF_FIELD_OFFSET(::Event, _impl_.args_),
        PROTOBUF_FIELD_OFFSET(::Event, _impl_.stack_frames_),
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        ~0u,
        0,
        ~0u,
        PROTOBUF_FIELD_OFFSET(::TraceData_StackFramesEntry_DoNotUse, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::TraceData_StackFramesEntry_DoNotUse, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TraceData_StackFramesEntry_DoNotUse, _impl_.key_),
        PROTOBUF_FIELD_OFFSET(::TraceData_StackFramesEntry_DoNotUse, _impl_.value_),
        0,
        1,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::TraceData, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::TraceData, _impl_.trace_events_),
        PROTOBUF_FIELD_OFFSET(::TraceData, _impl_.stack_frames_),
        PROTOBUF_FIELD_OFFSET(::TraceData, _impl_.samples_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::StackFrame)},
        {12, -1, -1, sizeof(::Arguments)},
        {24, 41, -1, sizeof(::Event)},
        {50, 60, -1, sizeof(::TraceData_StackFramesEntry_DoNotUse)},
        {62, -1, -1, sizeof(::TraceData)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::_StackFrame_default_instance_._instance,
    &::_Arguments_default_instance_._instance,
    &::_Event_default_instance_._instance,
    &::_TraceData_StackFramesEntry_DoNotUse_default_instance_._instance,
    &::_TraceData_default_instance_._instance,
};
const char descriptor_table_protodef_trace_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\013trace.proto\"H\n\nStackFrame\022\n\n\002id\030\001 \001(\t\022"
    "\014\n\004name\030\002 \001(\t\022\020\n\010category\030\003 \001(\t\022\016\n\006paren"
    "t\030\004 \001(\t\"V\n\tArguments\022\r\n\005count\030\001 \001(\005\022\023\n\013t"
    "hread_name\030\002 \001(\t\022\021\n\tfutex_top\030\003 \003(\t\022\022\n\ne"
    "vent_type\030\004 \001(\t\"\241\001\n\005Event\022\014\n\004name\030\001 \001(\t\022"
    "\013\n\003cat\030\002 \001(\t\022\013\n\003pid\030\003 \001(\r\022\013\n\003tid\030\004 \001(\r\022\n"
    "\n\002ts\030\005 \001(\004\022\013\n\003dur\030\006 \001(\004\022\r\n\005track\030\007 \001(\t\022\030"
    "\n\004args\030\010 \001(\0132\n.Arguments\022!\n\014stack_frames"
    "\030\t \003(\0132\013.StackFrame\"\256\001\n\tTraceData\022\034\n\014tra"
    "ce_events\030\001 \003(\0132\006.Event\0221\n\014stack_frames\030"
    "\002 \003(\0132\033.TraceData.StackFramesEntry\022\017\n\007sa"
    "mples\030\003 \003(\t\032\?\n\020StackFramesEntry\022\013\n\003key\030\001"
    " \001(\t\022\032\n\005value\030\002 \001(\0132\013.StackFrame:\0028\001b\006pr"
    "oto3"
};
static ::absl::once_flag descriptor_table_trace_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_trace_2eproto = {
    false,
    false,
    524,
    descriptor_table_protodef_trace_2eproto,
    "trace.proto",
    &descriptor_table_trace_2eproto_once,
    nullptr,
    0,
    5,
    schemas,
    file_default_instances,
    TableStruct_trace_2eproto::offsets,
    file_level_enum_descriptors_trace_2eproto,
    file_level_service_descriptors_trace_2eproto,
};
// ===================================================================

class StackFrame::_Internal {
 public:
};

StackFrame::StackFrame(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:StackFrame)
}
inline PROTOBUF_NDEBUG_INLINE StackFrame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::StackFrame& from_msg)
      : id_(arena, from.id_),
        name_(arena, from.name_),
        category_(arena, from.category_),
        parent_(arena, from.parent_),
        _cached_size_{0} {}

StackFrame::StackFrame(
    ::google::protobuf::Arena* arena,
    const StackFrame& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  StackFrame* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:StackFrame)
}
inline PROTOBUF_NDEBUG_INLINE StackFrame::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : id_(arena),
        name_(arena),
        category_(arena),
        parent_(arena),
        _cached_size_{0} {}

inline void StackFrame::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
StackFrame::~StackFrame() {
  // @@protoc_insertion_point(destructor:StackFrame)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void StackFrame::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.id_.Destroy();
  _impl_.name_.Destroy();
  _impl_.category_.Destroy();
  _impl_.parent_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    StackFrame::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_StackFrame_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &StackFrame::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<StackFrame>(),
            ::google::protobuf::Message::GetNewImpl<StackFrame>(),
            ::google::protobuf::Message::GetClearImpl<StackFrame>(), &StackFrame::ByteSizeLong,
                &StackFrame::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(StackFrame, _impl_._cached_size_),
            false,
        },
        &StackFrame::kDescriptorMethods,
        &descriptor_table_trace_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* StackFrame::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 39, 2> StackFrame::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::StackFrame>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string parent = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrame, _impl_.parent_)}},
    // string id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrame, _impl_.id_)}},
    // string name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrame, _impl_.name_)}},
    // string category = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(StackFrame, _impl_.category_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string id = 1;
    {PROTOBUF_FIELD_OFFSET(StackFrame, _impl_.id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string name = 2;
    {PROTOBUF_FIELD_OFFSET(StackFrame, _impl_.name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string category = 3;
    {PROTOBUF_FIELD_OFFSET(StackFrame, _impl_.category_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string parent = 4;
    {PROTOBUF_FIELD_OFFSET(StackFrame, _impl_.parent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\12\2\4\10\6\0\0\0"
    "StackFrame"
    "id"
    "name"
    "category"
    "parent"
  }},
};

PROTOBUF_NOINLINE void StackFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:StackFrame)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.category_.ClearToEmpty();
  _impl_.parent_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* StackFrame::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const StackFrame& this_ = static_cast<const StackFrame&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* StackFrame::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const StackFrame& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:StackFrame)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string id = 1;
          if (!this_._internal_id().empty()) {
            const std::string& _s = this_._internal_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StackFrame.id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string name = 2;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StackFrame.name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // string category = 3;
          if (!this_._internal_category().empty()) {
            const std::string& _s = this_._internal_category();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StackFrame.category");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string parent = 4;
          if (!this_._internal_parent().empty()) {
            const std::string& _s = this_._internal_parent();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "StackFrame.parent");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:StackFrame)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t StackFrame::ByteSizeLong(const MessageLite& base) {
          const StackFrame& this_ = static_cast<const StackFrame&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t StackFrame::ByteSizeLong() const {
          const StackFrame& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:StackFrame)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string id = 1;
            if (!this_._internal_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_id());
            }
            // string name = 2;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string category = 3;
            if (!this_._internal_category().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_category());
            }
            // string parent = 4;
            if (!this_._internal_parent().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_parent());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void StackFrame::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<StackFrame*>(&to_msg);
  auto& from = static_cast<const StackFrame&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:StackFrame)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_category().empty()) {
    _this->_internal_set_category(from._internal_category());
  }
  if (!from._internal_parent().empty()) {
    _this->_internal_set_parent(from._internal_parent());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void StackFrame::CopyFrom(const StackFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:StackFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void StackFrame::InternalSwap(StackFrame* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.id_, &other->_impl_.id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.category_, &other->_impl_.category_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.parent_, &other->_impl_.parent_, arena);
}

::google::protobuf::Metadata StackFrame::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Arguments::_Internal {
 public:
};

Arguments::Arguments(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Arguments)
}
inline PROTOBUF_NDEBUG_INLINE Arguments::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Arguments& from_msg)
      : futex_top_{visibility, arena, from.futex_top_},
        thread_name_(arena, from.thread_name_),
        event_type_(arena, from.event_type_),
        _cached_size_{0} {}

Arguments::Arguments(
    ::google::protobuf::Arena* arena,
    const Arguments& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Arguments* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.count_ = from._impl_.count_;

  // @@protoc_insertion_point(copy_constructor:Arguments)
}
inline PROTOBUF_NDEBUG_INLINE Arguments::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : futex_top_{visibility, arena},
        thread_name_(arena),
        event_type_(arena),
        _cached_size_{0} {}

inline void Arguments::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.count_ = {};
}
Arguments::~Arguments() {
  // @@protoc_insertion_point(destructor:Arguments)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Arguments::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.thread_name_.Destroy();
  _impl_.event_type_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Arguments::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Arguments_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Arguments::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Arguments>(),
            ::google::protobuf::Message::GetNewImpl<Arguments>(),
            ::google::protobuf::Message::GetClearImpl<Arguments>(), &Arguments::ByteSizeLong,
                &Arguments::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Arguments, _impl_._cached_size_),
            false,
        },
        &Arguments::kDescriptorMethods,
        &descriptor_table_trace_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Arguments::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 48, 2> Arguments::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Arguments>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string event_type = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(Arguments, _impl_.event_type_)}},
    // int32 count = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Arguments, _impl_.count_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(Arguments, _impl_.count_)}},
    // string thread_name = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Arguments, _impl_.thread_name_)}},
    // repeated string futex_top = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(Arguments, _impl_.futex_top_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int32 count = 1;
    {PROTOBUF_FIELD_OFFSET(Arguments, _impl_.count_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // string thread_name = 2;
    {PROTOBUF_FIELD_OFFSET(Arguments, _impl_.thread_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string futex_top = 3;
    {PROTOBUF_FIELD_OFFSET(Arguments, _impl_.futex_top_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
    // string event_type = 4;
    {PROTOBUF_FIELD_OFFSET(Arguments, _impl_.event_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\11\0\13\11\12\0\0\0"
    "Arguments"
    "thread_name"
    "futex_top"
    "event_type"
  }},
};

PROTOBUF_NOINLINE void Arguments::Clear() {
// @@protoc_insertion_point(message_clear_start:Arguments)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.futex_top_.Clear();
  _impl_.thread_name_.ClearToEmpty();
  _impl_.event_type_.ClearToEmpty();
  _impl_.count_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Arguments::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Arguments& this_ = static_cast<const Arguments&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Arguments::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Arguments& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Arguments)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // int32 count = 1;
          if (this_._internal_count() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<1>(
                    stream, this_._internal_count(), target);
          }

          // string thread_name = 2;
          if (!this_._internal_thread_name().empty()) {
            const std::string& _s = this_._internal_thread_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Arguments.thread_name");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // repeated string futex_top = 3;
          for (int i = 0, n = this_._internal_futex_top_size(); i < n; ++i) {
            const auto& s = this_._internal_futex_top().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Arguments.futex_top");
            target = stream->WriteString(3, s, target);
          }

          // string event_type = 4;
          if (!this_._internal_event_type().empty()) {
            const std::string& _s = this_._internal_event_type();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Arguments.event_type");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Arguments)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Arguments::ByteSizeLong(const MessageLite& base) {
          const Arguments& this_ = static_cast<const Arguments&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Arguments::ByteSizeLong() const {
          const Arguments& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Arguments)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated string futex_top = 3;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_futex_top().size());
              for (int i = 0, n = this_._internal_futex_top().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_futex_top().Get(i));
              }
            }
          }
           {
            // string thread_name = 2;
            if (!this_._internal_thread_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_thread_name());
            }
            // string event_type = 4;
            if (!this_._internal_event_type().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_event_type());
            }
            // int32 count = 1;
            if (this_._internal_count() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_count());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Arguments::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Arguments*>(&to_msg);
  auto& from = static_cast<const Arguments&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:Arguments)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_futex_top()->MergeFrom(from._internal_futex_top());
  if (!from._internal_thread_name().empty()) {
    _this->_internal_set_thread_name(from._internal_thread_name());
  }
  if (!from._internal_event_type().empty()) {
    _this->_internal_set_event_type(from._internal_event_type());
  }
  if (from._internal_count() != 0) {
    _this->_impl_.count_ = from._impl_.count_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Arguments::CopyFrom(const Arguments& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Arguments)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Arguments::InternalSwap(Arguments* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.futex_top_.InternalSwap(&other->_impl_.futex_top_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.thread_name_, &other->_impl_.thread_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.event_type_, &other->_impl_.event_type_, arena);
        swap(_impl_.count_, other->_impl_.count_);
}

::google::protobuf::Metadata Arguments::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class Event::_Internal {
 public:
  using HasBits =
      decltype(std::declval<Event>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(Event, _impl_._has_bits_);
};

Event::Event(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:Event)
}
inline PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::Event& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        stack_frames_{visibility, arena, from.stack_frames_},
        name_(arena, from.name_),
        cat_(arena, from.cat_),
        track_(arena, from.track_) {}

Event::Event(
    ::google::protobuf::Arena* arena,
    const Event& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  Event* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.args_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::Arguments>(
                              arena, *from._impl_.args_)
                        : nullptr;
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, pid_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, pid_),
           offsetof(Impl_, dur_) -
               offsetof(Impl_, pid_) +
               sizeof(Impl_::dur_));

  // @@protoc_insertion_point(copy_constructor:Event)
}
inline PROTOBUF_NDEBUG_INLINE Event::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        stack_frames_{visibility, arena},
        name_(arena),
        cat_(arena),
        track_(arena) {}

inline void Event::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, args_),
           0,
           offsetof(Impl_, dur_) -
               offsetof(Impl_, args_) +
               sizeof(Impl_::dur_));
}
Event::~Event() {
  // @@protoc_insertion_point(destructor:Event)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void Event::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.name_.Destroy();
  _impl_.cat_.Destroy();
  _impl_.track_.Destroy();
  delete _impl_.args_;
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    Event::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_Event_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &Event::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<Event>(),
            ::google::protobuf::Message::GetNewImpl<Event>(),
            ::google::protobuf::Message::GetClearImpl<Event>(), &Event::ByteSizeLong,
                &Event::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(Event, _impl_._cached_size_),
            false,
        },
        &Event::kDescriptorMethods,
        &descriptor_table_trace_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* Event::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<4, 9, 2, 34, 2> Event::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(Event, _impl_._has_bits_),
    0, // no _extensions_
    9, 120,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966784,  // skipmap
    offsetof(decltype(_table_), field_entries),
    9,  // num_field_entries
    2,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::Event>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.name_)}},
    // string cat = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.cat_)}},
    // uint32 pid = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Event, _impl_.pid_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.pid_)}},
    // uint32 tid = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(Event, _impl_.tid_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.tid_)}},
    // uint64 ts = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Event, _impl_.ts_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.ts_)}},
    // uint64 dur = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(Event, _impl_.dur_), 63>(),
     {48, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.dur_)}},
    // string track = 7;
    {::_pbi::TcParser::FastUS1,
     {58, 63, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.track_)}},
    // .Arguments args = 8;
    {::_pbi::TcParser::FastMtS1,
     {66, 0, 0, PROTOBUF_FIELD_OFFSET(Event, _impl_.args_)}},
    // repeated .StackFrame stack_frames = 9;
    {::_pbi::TcParser::FastMtR1,
     {74, 63, 1, PROTOBUF_FIELD_OFFSET(Event, _impl_.stack_frames_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string name = 1;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.name_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string cat = 2;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.cat_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 pid = 3;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.pid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint32 tid = 4;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.tid_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
    // uint64 ts = 5;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.ts_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // uint64 dur = 6;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.dur_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt64)},
    // string track = 7;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.track_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .Arguments args = 8;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.args_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // repeated .StackFrame stack_frames = 9;
    {PROTOBUF_FIELD_OFFSET(Event, _impl_.stack_frames_), -1, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Arguments>()},
    {::_pbi::TcParser::GetTable<::StackFrame>()},
  }}, {{
    "\5\4\3\0\0\0\0\5\0\0\0\0\0\0\0\0"
    "Event"
    "name"
    "cat"
    "track"
  }},
};

PROTOBUF_NOINLINE void Event::Clear() {
// @@protoc_insertion_point(message_clear_start:Event)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.stack_frames_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.cat_.ClearToEmpty();
  _impl_.track_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.args_ != nullptr);
    _impl_.args_->Clear();
  }
  ::memset(&_impl_.pid_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.dur_) -
      reinterpret_cast<char*>(&_impl_.pid_)) + sizeof(_impl_.dur_));
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* Event::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const Event& this_ = static_cast<const Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* Event::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:Event)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string name = 1;
          if (!this_._internal_name().empty()) {
            const std::string& _s = this_._internal_name();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Event.name");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // string cat = 2;
          if (!this_._internal_cat().empty()) {
            const std::string& _s = this_._internal_cat();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Event.cat");
            target = stream->WriteStringMaybeAliased(2, _s, target);
          }

          // uint32 pid = 3;
          if (this_._internal_pid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                3, this_._internal_pid(), target);
          }

          // uint32 tid = 4;
          if (this_._internal_tid() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                4, this_._internal_tid(), target);
          }

          // uint64 ts = 5;
          if (this_._internal_ts() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                5, this_._internal_ts(), target);
          }

          // uint64 dur = 6;
          if (this_._internal_dur() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt64ToArray(
                6, this_._internal_dur(), target);
          }

          // string track = 7;
          if (!this_._internal_track().empty()) {
            const std::string& _s = this_._internal_track();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "Event.track");
            target = stream->WriteStringMaybeAliased(7, _s, target);
          }

          cached_has_bits = this_._impl_._has_bits_[0];
          // .Arguments args = 8;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                8, *this_._impl_.args_, this_._impl_.args_->GetCachedSize(), target,
                stream);
          }

          // repeated .StackFrame stack_frames = 9;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_stack_frames_size());
               i < n; i++) {
            const auto& repfield = this_._internal_stack_frames().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    9, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:Event)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t Event::ByteSizeLong(const MessageLite& base) {
          const Event& this_ = static_cast<const Event&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t Event::ByteSizeLong() const {
          const Event& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:Event)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .StackFrame stack_frames = 9;
             {
              total_size += 1UL * this_._internal_stack_frames_size();
              for (const auto& msg : this_._internal_stack_frames()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
           {
            // string name = 1;
            if (!this_._internal_name().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_name());
            }
            // string cat = 2;
            if (!this_._internal_cat().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_cat());
            }
            // string track = 7;
            if (!this_._internal_track().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_track());
            }
          }
           {
            // .Arguments args = 8;
            cached_has_bits =
                this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.args_);
            }
          }
           {
            // uint32 pid = 3;
            if (this_._internal_pid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_pid());
            }
            // uint32 tid = 4;
            if (this_._internal_tid() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_tid());
            }
            // uint64 ts = 5;
            if (this_._internal_ts() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_ts());
            }
            // uint64 dur = 6;
            if (this_._internal_dur() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt64SizePlusOne(
                  this_._internal_dur());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void Event::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<Event*>(&to_msg);
  auto& from = static_cast<const Event&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:Event)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_stack_frames()->MergeFrom(
      from._internal_stack_frames());
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_cat().empty()) {
    _this->_internal_set_cat(from._internal_cat());
  }
  if (!from._internal_track().empty()) {
    _this->_internal_set_track(from._internal_track());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.args_ != nullptr);
    if (_this->_impl_.args_ == nullptr) {
      _this->_impl_.args_ =
          ::google::protobuf::Message::CopyConstruct<::Arguments>(arena, *from._impl_.args_);
    } else {
      _this->_impl_.args_->MergeFrom(*from._impl_.args_);
    }
  }
  if (from._internal_pid() != 0) {
    _this->_impl_.pid_ = from._impl_.pid_;
  }
  if (from._internal_tid() != 0) {
    _this->_impl_.tid_ = from._impl_.tid_;
  }
  if (from._internal_ts() != 0) {
    _this->_impl_.ts_ = from._impl_.ts_;
  }
  if (from._internal_dur() != 0) {
    _this->_impl_.dur_ = from._impl_.dur_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void Event::CopyFrom(const Event& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Event)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void Event::InternalSwap(Event* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.stack_frames_.InternalSwap(&other->_impl_.stack_frames_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.name_, &other->_impl_.name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.cat_, &other->_impl_.cat_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.track_, &other->_impl_.track_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Event, _impl_.dur_)
      + sizeof(Event::_impl_.dur_)
      - PROTOBUF_FIELD_OFFSET(Event, _impl_.args_)>(
          reinterpret_cast<char*>(&_impl_.args_),
          reinterpret_cast<char*>(&other->_impl_.args_));
}

::google::protobuf::Metadata Event::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

#if defined(PROTOBUF_CUSTOM_VTABLE)
              TraceData_StackFramesEntry_DoNotUse::TraceData_StackFramesEntry_DoNotUse() : SuperType(_class_data_.base()) {}
              TraceData_StackFramesEntry_DoNotUse::TraceData_StackFramesEntry_DoNotUse(::google::protobuf::Arena* arena)
                  : SuperType(arena, _class_data_.base()) {}
#else   // PROTOBUF_CUSTOM_VTABLE
              TraceData_StackFramesEntry_DoNotUse::TraceData_StackFramesEntry_DoNotUse() : SuperType() {}
              TraceData_StackFramesEntry_DoNotUse::TraceData_StackFramesEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
#endif  // PROTOBUF_CUSTOM_VTABLE
              PROTOBUF_CONSTINIT
              PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
              const ::google::protobuf::MessageLite::ClassDataFull
                  TraceData_StackFramesEntry_DoNotUse::_class_data_ = {
                      ::google::protobuf::Message::ClassData{
                          &_TraceData_StackFramesEntry_DoNotUse_default_instance_._instance,
                          &_table_.header,
                          nullptr,  // OnDemandRegisterArenaDtor
                          nullptr,  // IsInitialized
                          &TraceData_StackFramesEntry_DoNotUse::MergeImpl,
              #if defined(PROTOBUF_CUSTOM_VTABLE)
                          ::google::protobuf::Message::GetDeleteImpl<TraceData_StackFramesEntry_DoNotUse>(),
                          ::google::protobuf::Message::GetNewImpl<TraceData_StackFramesEntry_DoNotUse>(),
                          ::google::protobuf::Message::ClearImpl, ::google::protobuf::Message::ByteSizeLongImpl,
                              ::google::protobuf::Message::_InternalSerializeImpl,
              #endif  // PROTOBUF_CUSTOM_VTABLE
                          PROTOBUF_FIELD_OFFSET(TraceData_StackFramesEntry_DoNotUse, _impl_._cached_size_),
                          false,
                      },
                      &TraceData_StackFramesEntry_DoNotUse::kDescriptorMethods,
                      &descriptor_table_trace_2eproto,
                      nullptr,  // tracker
              };
              const ::google::protobuf::MessageLite::ClassData* TraceData_StackFramesEntry_DoNotUse::GetClassData() const {
                ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
                ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
                return _class_data_.base();
              }
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 1, 38, 2> TraceData_StackFramesEntry_DoNotUse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(TraceData_StackFramesEntry_DoNotUse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::DiscardEverythingFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TraceData_StackFramesEntry_DoNotUse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // .StackFrame value = 2;
    {::_pbi::TcParser::FastMtS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(TraceData_StackFramesEntry_DoNotUse, _impl_.value_)}},
    // string key = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TraceData_StackFramesEntry_DoNotUse, _impl_.key_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string key = 1;
    {PROTOBUF_FIELD_OFFSET(TraceData_StackFramesEntry_DoNotUse, _impl_.key_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // .StackFrame value = 2;
    {PROTOBUF_FIELD_OFFSET(TraceData_StackFramesEntry_DoNotUse, _impl_.value_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::StackFrame>()},
  }}, {{
    "\32\3\0\0\0\0\0\0"
    "TraceData.StackFramesEntry"
    "key"
  }},
};

// ===================================================================

class TraceData::_Internal {
 public:
};

TraceData::TraceData(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:TraceData)
}
inline PROTOBUF_NDEBUG_INLINE TraceData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::TraceData& from_msg)
      : trace_events_{visibility, arena, from.trace_events_},
        stack_frames_{visibility, arena, from.stack_frames_},
        samples_{visibility, arena, from.samples_},
        _cached_size_{0} {}

TraceData::TraceData(
    ::google::protobuf::Arena* arena,
    const TraceData& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  TraceData* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:TraceData)
}
inline PROTOBUF_NDEBUG_INLINE TraceData::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : trace_events_{visibility, arena},
        stack_frames_{visibility, arena},
        samples_{visibility, arena},
        _cached_size_{0} {}

inline void TraceData::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
TraceData::~TraceData() {
  // @@protoc_insertion_point(destructor:TraceData)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void TraceData::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::MessageLite::ClassDataFull
    TraceData::_class_data_ = {
        ::google::protobuf::Message::ClassData{
            &_TraceData_default_instance_._instance,
            &_table_.header,
            nullptr,  // OnDemandRegisterArenaDtor
            nullptr,  // IsInitialized
            &TraceData::MergeImpl,
#if defined(PROTOBUF_CUSTOM_VTABLE)
            ::google::protobuf::Message::GetDeleteImpl<TraceData>(),
            ::google::protobuf::Message::GetNewImpl<TraceData>(),
            ::google::protobuf::Message::GetClearImpl<TraceData>(), &TraceData::ByteSizeLong,
                &TraceData::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
            PROTOBUF_FIELD_OFFSET(TraceData, _impl_._cached_size_),
            false,
        },
        &TraceData::kDescriptorMethods,
        &descriptor_table_trace_2eproto,
        nullptr,  // tracker
};
const ::google::protobuf::MessageLite::ClassData* TraceData::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 3, 37, 2> TraceData::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    3,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::TraceData>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // repeated .Event trace_events = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(TraceData, _impl_.trace_events_)}},
    {::_pbi::TcParser::MiniParse, {}},
    // repeated string samples = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(TraceData, _impl_.samples_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .Event trace_events = 1;
    {PROTOBUF_FIELD_OFFSET(TraceData, _impl_.trace_events_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
    // map<string, .StackFrame> stack_frames = 2;
    {PROTOBUF_FIELD_OFFSET(TraceData, _impl_.stack_frames_), 0, 1,
    (0 | ::_fl::kFcRepeated | ::_fl::kMap)},
    // repeated string samples = 3;
    {PROTOBUF_FIELD_OFFSET(TraceData, _impl_.samples_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::Event>()},
    {::_pbi::TcParser::GetMapAuxInfo<
        decltype(TraceData()._impl_.stack_frames_)>(
        1, 0, 0, 9,
        11)},
    {::_pbi::TcParser::CreateInArenaStorageCb<::StackFrame>},
  }}, {{
    "\11\0\14\7\0\0\0\0"
    "TraceData"
    "stack_frames"
    "samples"
  }},
};

PROTOBUF_NOINLINE void TraceData::Clear() {
// @@protoc_insertion_point(message_clear_start:TraceData)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.trace_events_.Clear();
  _impl_.stack_frames_.Clear();
  _impl_.samples_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* TraceData::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const TraceData& this_ = static_cast<const TraceData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* TraceData::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const TraceData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:TraceData)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .Event trace_events = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_trace_events_size());
               i < n; i++) {
            const auto& repfield = this_._internal_trace_events().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          // map<string, .StackFrame> stack_frames = 2;
          if (!this_._internal_stack_frames().empty()) {
            using MapType = ::google::protobuf::Map<std::string, ::StackFrame>;
            using WireHelper = _pbi::MapEntryFuncs<std::string, ::StackFrame,
                                           _pbi::WireFormatLite::TYPE_STRING,
                                           _pbi::WireFormatLite::TYPE_MESSAGE>;
            const auto& field = this_._internal_stack_frames();

            if (stream->IsSerializationDeterministic() && field.size() > 1) {
              for (const auto& entry : ::google::protobuf::internal::MapSorterPtr<MapType>(field)) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TraceData.stack_frames");
              }
            } else {
              for (const auto& entry : field) {
                target = WireHelper::InternalSerialize(
                    2, entry.first, entry.second, target, stream);
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    entry.first.data(), static_cast<int>(entry.first.length()),
 ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TraceData.stack_frames");
              }
            }
          }

          // repeated string samples = 3;
          for (int i = 0, n = this_._internal_samples_size(); i < n; ++i) {
            const auto& s = this_._internal_samples().Get(i);
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "TraceData.samples");
            target = stream->WriteString(3, s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:TraceData)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t TraceData::ByteSizeLong(const MessageLite& base) {
          const TraceData& this_ = static_cast<const TraceData&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t TraceData::ByteSizeLong() const {
          const TraceData& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:TraceData)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .Event trace_events = 1;
             {
              total_size += 1UL * this_._internal_trace_events_size();
              for (const auto& msg : this_._internal_trace_events()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
            // map<string, .StackFrame> stack_frames = 2;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_stack_frames_size());
              for (const auto& entry : this_._internal_stack_frames()) {
                total_size += _pbi::MapEntryFuncs<std::string, ::StackFrame,
                                               _pbi::WireFormatLite::TYPE_STRING,
                                               _pbi::WireFormatLite::TYPE_MESSAGE>::ByteSizeLong(entry.first, entry.second);
              }
            }
            // repeated string samples = 3;
             {
              total_size +=
                  1 * ::google::protobuf::internal::FromIntSize(this_._internal_samples().size());
              for (int i = 0, n = this_._internal_samples().size(); i < n; ++i) {
                total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
                    this_._internal_samples().Get(i));
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void TraceData::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<TraceData*>(&to_msg);
  auto& from = static_cast<const TraceData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:TraceData)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_trace_events()->MergeFrom(
      from._internal_trace_events());
  _this->_impl_.stack_frames_.MergeFrom(from._impl_.stack_frames_);
  _this->_internal_mutable_samples()->MergeFrom(from._internal_samples());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void TraceData::CopyFrom(const TraceData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TraceData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void TraceData::InternalSwap(TraceData* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.trace_events_.InternalSwap(&other->_impl_.trace_events_);
  _impl_.stack_frames_.InternalSwap(&other->_impl_.stack_frames_);
  _impl_.samples_.InternalSwap(&other->_impl_.samples_);
}

::google::protobuf::Metadata TraceData::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_trace_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
